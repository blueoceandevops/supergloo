// Code generated by MockGen. DO NOT EDIT.
// Source: kubectl.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockKubectl is a mock of Kubectl interface
type MockKubectl struct {
	ctrl     *gomock.Controller
	recorder *MockKubectlMockRecorder
}

// MockKubectlMockRecorder is the mock recorder for MockKubectl
type MockKubectlMockRecorder struct {
	mock *MockKubectl
}

// NewMockKubectl creates a new mock instance
func NewMockKubectl(ctrl *gomock.Controller) *MockKubectl {
	mock := &MockKubectl{ctrl: ctrl}
	mock.recorder = &MockKubectlMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockKubectl) EXPECT() *MockKubectlMockRecorder {
	return m.recorder
}

// ApplyManifest mocks base method
func (m *MockKubectl) ApplyManifest(manifest string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ApplyManifest", manifest)
	ret0, _ := ret[0].(error)
	return ret0
}

// ApplyManifest indicates an expected call of ApplyManifest
func (mr *MockKubectlMockRecorder) ApplyManifest(manifest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApplyManifest", reflect.TypeOf((*MockKubectl)(nil).ApplyManifest), manifest)
}
